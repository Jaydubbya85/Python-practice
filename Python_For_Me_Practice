{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "090dd892-41fb-404a-a7d3-3192ccae80f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, World!\n"
     ]
    }
   ],
   "source": [
    "print(\"Hello, World!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cb14cab-f780-47fe-8e9a-d19b5c6ed8a8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b2b8a034-1ac0-4f27-9832-adbd75b9601c",
   "metadata": {},
   "source": [
    "## April 19th, 2025\n",
    "- ** Today's Goal: ** Learn Python Basics.\n",
    "- ** Time Spent: ** 1 hour."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1284d1a6-8b77-4edc-bc76-a32b45b024c9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1acf3f8f-d2d8-4542-ab7c-e35b118cba56",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n"
     ]
    }
   ],
   "source": [
    "# Calculate the sum of two numbers\n",
    "a = 5\n",
    "b= 10\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "74d5a755-5b57-4549-894c-e920bcec6d2f",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "expected ':' (2373696166.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[3], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    if True\u001b[0m\n\u001b[1;37m             ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m expected ':'\n"
     ]
    }
   ],
   "source": [
    "if True  \n",
    "    print(\"Hello\")  # Missing colon (:) â†’ Error "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a2ebc29f-387a-4378-a625-dc448299e4c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "if True:  \n",
    "    print(\"Hello\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "97f34e26-378f-4d98-b885-e6a7690c98df",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unterminated string literal (detected at line 2) (3297606228.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[5], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(\"Jayson Winer, also known as 'The Bald Eagle')\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m unterminated string literal (detected at line 2)\n"
     ]
    }
   ],
   "source": [
    "#a) print your name\n",
    "print(\"Jayson Winer, also known as 'The Bald Eagle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e96e52d5-0b21-4499-abc5-98a11f432e3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jayson Winer, also known as The Bald Eagle\n"
     ]
    }
   ],
   "source": [
    "#a) print your name\n",
    "print(\"Jayson Winer, also known as The Bald Eagle\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "949f0a1b-da3b-427a-be6c-a237485643ba",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unterminated string literal (detected at line 2) (3212236422.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[7], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(\"hello, world!!!!! I love Python!!!)\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m unterminated string literal (detected at line 2)\n"
     ]
    }
   ],
   "source": [
    "#b) Print a greeting\n",
    "print(\"hello, world!!!!! I love Python!!!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7373ddc2-1001-4dce-a88c-9f6d96734915",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello, world!!!!! I love Python!!!\n"
     ]
    }
   ],
   "source": [
    "print(\"hello, world!!!!! I love Python!!!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bedd6765-75eb-4d4b-aead-3912ddfc3aca",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
